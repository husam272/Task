{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\HUSAM RK\\\\New task\\\\task\\\\src\\\\components\\\\Segmentpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: 'First Name',\n  value: 'first_name'\n}, {\n  label: 'Last Name',\n  value: 'last_name'\n}, {\n  label: 'Gender',\n  value: 'gender'\n}, {\n  label: 'Age',\n  value: 'age'\n}, {\n  label: 'Account Name',\n  value: 'account_name'\n}, {\n  label: 'City',\n  value: 'city'\n}, {\n  label: 'State',\n  value: 'state'\n}];\nfunction Segmentpage() {\n  _s();\n  const [segmentName, setSegmentName] = useState('');\n  const [schema, setSchema] = useState([{\n    first_name: 'First Name'\n  }, {\n    last_name: 'Last Name'\n  }]);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [availableOptions, setAvailableOptions] = useState(options.filter(opt => !schema.find(sch => sch[opt.value])));\n  const handleAddSchema = () => {\n    if (selectedOption && !schema.find(sch => sch[selectedOption])) {\n      setSchema([...schema, {\n        [selectedOption]: selectedOption\n      }]);\n      setSelectedOption('');\n      setAvailableOptions(options.filter(opt => !schema.find(sch => sch[opt.value])));\n    }\n  };\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schema.map(sch => ({\n        [sch[sch.value]]: sch.label\n      }))\n    };\n    axios.post('https://webhook.site/21ea7e89-3370-472f-95d3-95c1d7bf915d', data).then(() => {\n      alert('Segment saved successfully!');\n      setSegmentName('');\n      setSchema([{\n        first_name: 'First Name'\n      }, {\n        last_name: 'Last Name'\n      }]);\n    }).catch(error => alert(`Error saving segment: ${error}`));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title1\",\n        children: \"Saving Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input1\",\n        children: \"Enter the Name of the segment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: segmentName,\n        onChange: e => setSegmentName(e.target.value),\n        placeholder: \"Name of the Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content1\",\n        children: \"To save your segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), schema.map(sch => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [sch.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sch.value,\n          onChange: e => {\n            const updatedSchema = schema.map(s => {\n              if (s.value === sch.value) {\n                return {\n                  ...s,\n                  [e.target.value]: e.target.value\n                };\n              } else {\n                return s;\n              }\n            });\n            setSchema(updatedSchema);\n            setAvailableOptions(options.filter(opt => !updatedSchema.find(sch => sch[opt.value])));\n          },\n          children: options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt.value,\n            disabled: sch[opt.value],\n            children: opt.label\n          }, opt.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, sch.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Add schema to segment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedOption,\n          onChange: e => setSelectedOption(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), availableOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt.value,\n            children: opt.label\n          }, opt.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSchema,\n          children: \"+Add new schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveSegment,\n        children: \"Save Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Segmentpage, \"+0qsQLKYHmqcNo9i3WUjaCXHqNg=\");\n_c = Segmentpage;\nexport default Segmentpage;\nvar _c;\n$RefreshReg$(_c, \"Segmentpage\");","map":{"version":3,"names":["React","useState","axios","ArrowBackIosIcon","jsxDEV","_jsxDEV","options","label","value","Segmentpage","_s","segmentName","setSegmentName","schema","setSchema","first_name","last_name","selectedOption","setSelectedOption","availableOptions","setAvailableOptions","filter","opt","find","sch","handleAddSchema","handleSaveSegment","data","segment_name","map","post","then","alert","catch","error","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","updatedSchema","s","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/HUSAM RK/New task/task/src/components/Segmentpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\n\r\n\r\nconst options = [\r\n    { label: 'First Name', value: 'first_name' },\r\n    { label: 'Last Name', value: 'last_name' },\r\n    { label: 'Gender', value: 'gender' },\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Account Name', value: 'account_name' },\r\n    { label: 'City', value: 'city' },\r\n    { label: 'State', value: 'state' }\r\n];\r\n\r\nfunction Segmentpage() {\r\n    const [segmentName, setSegmentName] = useState('');\r\n    const [schema, setSchema] = useState([{ first_name: 'First Name' }, { last_name: 'Last Name' }]);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [availableOptions, setAvailableOptions] = useState(options.filter(opt => !schema.find(sch => sch[opt.value])));\r\n\r\n    const handleAddSchema = () => {\r\n        if (selectedOption && !schema.find(sch => sch[selectedOption])) {\r\n            setSchema([...schema, { [selectedOption]: selectedOption }]);\r\n            setSelectedOption('');\r\n            setAvailableOptions(options.filter(opt => !schema.find(sch => sch[opt.value])));\r\n        }\r\n    };\r\n\r\n    const handleSaveSegment = () => {\r\n        const data = {\r\n            segment_name: segmentName,\r\n            schema: schema.map(sch => ({ [sch[sch.value]]: sch.label }))\r\n        };\r\n        axios.post('https://webhook.site/21ea7e89-3370-472f-95d3-95c1d7bf915d', data)\r\n            .then(() => {\r\n                alert('Segment saved successfully!');\r\n                setSegmentName('');\r\n                setSchema([{ first_name: 'First Name' }, { last_name: 'Last Name' }]);\r\n            })\r\n            .catch(error => alert(`Error saving segment: ${error}`));\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className='header'>\r\n                <div><a href='/'><ArrowBackIosIcon /></a></div>\r\n                <div className='title1'>Saving Segment</div>\r\n            </div>\r\n            <div className='section1'>\r\n                <div className='input1'>Enter the Name of the segment </div>\r\n                <input type=\"text\" value={segmentName} onChange={e => setSegmentName(e.target.value)} placeholder=\"Name of the Segment\" />\r\n                <br /><br />\r\n                <div className='content1'>\r\n                    To save your segment \r\n                </div>\r\n                {schema.map(sch => (\r\n                    <div key={sch.value}>\r\n                        <label>{sch.label}:</label>\r\n                        <select value={sch.value} onChange={e => {\r\n                            const updatedSchema = schema.map(s => {\r\n                                if (s.value === sch.value) {\r\n                                    return { ...s, [e.target.value]: e.target.value };\r\n                                } else {\r\n                                    return s;\r\n                                }\r\n                            });\r\n                            setSchema(updatedSchema);\r\n                            setAvailableOptions(options.filter(opt => !updatedSchema.find(sch => sch[opt.value])));\r\n                        }}>\r\n                            {options.map(opt => (\r\n                                <option key={opt.value} value={opt.value} disabled={sch[opt.value]}>{opt.label}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                ))}\r\n                <br />\r\n                <label>\r\n                    Add schema to segment:\r\n                    <select value={selectedOption} onChange={e => setSelectedOption(e.target.value)}>\r\n                        <option value=\"\">Select an option</option>\r\n                        {availableOptions.map(opt => (\r\n                            <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n                        ))}\r\n                    </select>\r\n                    <button onClick={handleAddSchema}>+Add new schema</button>\r\n                </label>\r\n                <br /><br />\r\n                <button onClick={handleSaveSegment}>Save Segment</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Segmentpage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}