{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\HUSAM RK\\\\New task\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schemaOptions = [{\n  label: 'First Name',\n  value: 'first_name'\n}, {\n  label: 'Last Name',\n  value: 'last_name'\n}, {\n  label: 'Gender',\n  value: 'gender'\n}, {\n  label: 'Age',\n  value: 'age'\n}, {\n  label: 'Account Name',\n  value: 'account_name'\n}, {\n  label: 'City',\n  value: 'city'\n}, {\n  label: 'State',\n  value: 'state'\n}];\nfunction App() {\n  _s();\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchema, setNewSchema] = useState('');\n  const handleAddSchema = () => {\n    setSelectedSchema(prevSchema => [...prevSchema, {\n      value: newSchema,\n      label: newSchema\n    }]);\n    setNewSchema('');\n  };\n  const handleSaveSegment = () => {\n    const segmentData = {\n      segment_name: segmentName,\n      schema: selectedSchema\n    };\n    console.log(segmentData); // replace with your API call to send data to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowPopup(true),\n      children: \"Save Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Segment Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: segmentName,\n          onChange: e => setSegmentName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue-box\",\n        children: [selectedSchema.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: schema.value,\n            onChange: e => {\n              const newSelectedSchema = [...selectedSchema];\n              newSelectedSchema[index].value = e.target.value;\n              newSelectedSchema[index].label = e.target.selectedOptions[0].label;\n              setSelectedSchema(newSelectedSchema);\n            },\n            children: schemaOptions.filter(option => !selectedSchema.find(s => s.value === option.value)).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSchema,\n            onChange: e => setNewSchema(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a new schema\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), schemaOptions.filter(option => !selectedSchema.find(s => s.value === option.value)).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddSchema,\n            children: \"+ Add new schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveSegment,\n        children: \"Save the Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HXBI4eBIN2kN3qY1lCF9bc5T35I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","schemaOptions","label","value","App","_s","segmentName","setSegmentName","selectedSchema","setSelectedSchema","newSchema","setNewSchema","handleAddSchema","prevSchema","handleSaveSegment","segmentData","segment_name","schema","console","log","children","onClick","setShowPopup","fileName","_jsxFileName","lineNumber","columnNumber","showPopup","className","type","onChange","e","target","map","index","newSelectedSchema","selectedOptions","filter","option","find","s","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/HUSAM RK/New task/task/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst schemaOptions = [\n  { label: 'First Name', value: 'first_name' },\n  { label: 'Last Name', value: 'last_name' },\n  { label: 'Gender', value: 'gender' },\n  { label: 'Age', value: 'age' },\n  { label: 'Account Name', value: 'account_name' },\n  { label: 'City', value: 'city' },\n  { label: 'State', value: 'state' },\n];\n\nfunction App() {\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchema, setNewSchema] = useState('');\n\n  const handleAddSchema = () => {\n    setSelectedSchema(prevSchema => [\n      ...prevSchema,\n      { value: newSchema, label: newSchema }\n    ]);\n    setNewSchema('');\n  };\n\n  const handleSaveSegment = () => {\n    const segmentData = {\n      segment_name: segmentName,\n      schema: selectedSchema\n    };\n    console.log(segmentData); // replace with your API call to send data to server\n  };\n\n  return (\n    <div>\n      <button onClick={() => setShowPopup(true)}>Save Segment</button>\n\n      {showPopup && (\n        <div className=\"popup\">\n          <label>\n            Segment Name:\n            <input\n              type=\"text\"\n              value={segmentName}\n              onChange={(e) => setSegmentName(e.target.value)}\n            />\n          </label>\n\n          <div className=\"blue-box\">\n            {selectedSchema.map((schema, index) => (\n              <div key={index}>\n                <select\n                  value={schema.value}\n                  onChange={(e) => {\n                    const newSelectedSchema = [...selectedSchema];\n                    newSelectedSchema[index].value = e.target.value;\n                    newSelectedSchema[index].label = e.target.selectedOptions[0].label;\n                    setSelectedSchema(newSelectedSchema);\n                  }}\n                >\n                  {schemaOptions\n                    .filter((option) => !selectedSchema.find(s => s.value === option.value))\n                    .map((option) => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))\n                  }\n                </select>\n              </div>\n            ))}\n\n            <div>\n              <select\n                value={newSchema}\n                onChange={(e) => setNewSchema(e.target.value)}\n              >\n                <option value=\"\">Select a new schema</option>\n                {schemaOptions\n                  .filter((option) => !selectedSchema.find(s => s.value === option.value))\n                  .map((option) => (\n                    <option key={option.value} value={option.value}>{option.label}</option>\n                  ))\n                }\n              </select>\n              <button onClick={handleAddSchema}>+ Add new schema</button>\n            </div>\n          </div>\n\n          <button onClick={handleSaveSegment}>Save the Segment</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}