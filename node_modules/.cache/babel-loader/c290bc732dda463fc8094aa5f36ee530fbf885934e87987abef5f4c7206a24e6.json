{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\HUSAM RK\\\\New task\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: 'First Name',\n  value: 'first_name'\n}, {\n  label: 'Last Name',\n  value: 'last_name'\n}, {\n  label: 'Gender',\n  value: 'gender'\n}, {\n  label: 'Age',\n  value: 'age'\n}, {\n  label: 'Account Name',\n  value: 'account_name'\n}, {\n  label: 'City',\n  value: 'city'\n}, {\n  label: 'State',\n  value: 'state'\n}];\nfunction App() {\n  _s();\n  const [segmentName, setSegmentName] = useState('');\n  const [schema, setSchema] = useState([{\n    first_name: 'First Name'\n  }, {\n    last_name: 'Last Name'\n  }]);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [availableOptions, setAvailableOptions] = useState(options.filter(opt => !schema.find(sch => sch[opt.value])));\n  const handleAddSchema = () => {\n    if (selectedOption && !schema.find(sch => sch[selectedOption])) {\n      setSchema([...schema, {\n        [selectedOption]: selectedOption\n      }]);\n      setSelectedOption('');\n      setAvailableOptions(options.filter(opt => !schema.find(sch => sch[opt.value])));\n    }\n  };\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schema.map(sch => ({\n        [sch[sch.value]]: sch.label\n      }))\n    };\n    axios.post('https://webhook.site/21ea7e89-3370-472f-95d3-95c1d7bf915d', data).then(() => {\n      alert('Segment saved successfully!');\n      setSegmentName('');\n      setSchema([{\n        first_name: 'First Name'\n      }, {\n        last_name: 'Last Name'\n      }]);\n    }).catch(error => alert(`Error saving segment: ${error}`));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Save Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Segment Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: segmentName,\n        onChange: e => setSegmentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), schema.map(sch => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [sch.label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sch.value,\n        onChange: e => {\n          const updatedSchema = schema.map(s => {\n            if (s.value === sch.value) {\n              return {\n                ...s,\n                [e.target.value]: e.target.value\n              };\n            } else {\n              return s;\n            }\n          });\n          setSchema(updatedSchema);\n          setAvailableOptions(options.filter(opt => !updatedSchema.find(sch => sch[opt.value])));\n        },\n        children: options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt.value,\n          disabled: sch[opt.value],\n          children: opt.label\n        }, opt.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, sch.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Add schema to segment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: e => setSelectedOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), availableOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt.value,\n          children: opt.label\n        }, opt.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSchema,\n        children: \"+Add new schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveSegment,\n      children: \"Save Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+0qsQLKYHmqcNo9i3WUjaCXHqNg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","options","label","value","App","_s","segmentName","setSegmentName","schema","setSchema","first_name","last_name","selectedOption","setSelectedOption","availableOptions","setAvailableOptions","filter","opt","find","sch","handleAddSchema","handleSaveSegment","data","segment_name","map","post","then","alert","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","updatedSchema","s","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/HUSAM RK/New task/task/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst options = [\n  { label: 'First Name', value: 'first_name' },\n  { label: 'Last Name', value: 'last_name' },\n  { label: 'Gender', value: 'gender' },\n  { label: 'Age', value: 'age' },\n  { label: 'Account Name', value: 'account_name' },\n  { label: 'City', value: 'city' },\n  { label: 'State', value: 'state' }\n];\n\nfunction App() {\n  const [segmentName, setSegmentName] = useState('');\n  const [schema, setSchema] = useState([{ first_name: 'First Name' }, { last_name: 'Last Name' }]);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [availableOptions, setAvailableOptions] = useState(options.filter(opt => !schema.find(sch => sch[opt.value])));\n\n  const handleAddSchema = () => {\n    if (selectedOption && !schema.find(sch => sch[selectedOption])) {\n      setSchema([...schema, { [selectedOption]: selectedOption }]);\n      setSelectedOption('');\n      setAvailableOptions(options.filter(opt => !schema.find(sch => sch[opt.value])));\n    }\n  };\n\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schema.map(sch => ({ [sch[sch.value]]: sch.label }))\n    };\n    axios.post('https://webhook.site/21ea7e89-3370-472f-95d3-95c1d7bf915d', data)\n      .then(() => {\n        alert('Segment saved successfully!');\n        setSegmentName('');\n        setSchema([{ first_name: 'First Name' }, { last_name: 'Last Name' }]);\n      })\n      .catch(error => alert(`Error saving segment: ${error}`));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Save Segment</h1>\n      <label>Segment Name: <input type=\"text\" value={segmentName} onChange={e => setSegmentName(e.target.value)} /></label>\n      <br /><br />\n      {schema.map(sch => (\n        <div key={sch.value}>\n          <label>{sch.label}:</label>\n          <select value={sch.value} onChange={e => {\n            const updatedSchema = schema.map(s => {\n              if (s.value === sch.value) {\n                return { ...s, [e.target.value]: e.target.value };\n              } else {\n                return s;\n              }\n            });\n            setSchema(updatedSchema);\n            setAvailableOptions(options.filter(opt => !updatedSchema.find(sch => sch[opt.value])));\n          }}>\n            {options.map(opt => (\n              <option key={opt.value} value={opt.value} disabled={sch[opt.value]}>{opt.label}</option>\n            ))}\n          </select>\n        </div>\n      ))}\n      <br />\n      <label>\n        Add schema to segment:\n        <select value={selectedOption} onChange={e => setSelectedOption(e.target.value)}>\n          <option value=\"\">Select an option</option>\n          {availableOptions.map(opt => (\n            <option key={opt.value} value={opt.value}>{opt.label}</option>\n          ))}\n        </select>\n        <button onClick={handleAddSchema}>+Add new schema</button>\n      </label>\n      <br /><br />\n      <button onClick={handleSaveSegment}>Save Segment</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}